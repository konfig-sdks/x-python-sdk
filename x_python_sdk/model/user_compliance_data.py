# coding: utf-8

"""
    Twitter API v2

    Twitter API v2 available endpoints

    The version of the OpenAPI document: 2.62
    Created by: https://developer.twitter.com/
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from x_python_sdk import schemas  # noqa: F401


class UserComplianceData(
    schemas.ComposedSchema,
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    User compliance data.
    """


    class MetaOapg:
        
        @classmethod
        @functools.lru_cache()
        def one_of(cls):
            # we need this here to make our import statements work
            # we must store _composed_schemas in here so the code is only run
            # when we invoke this method. If we kept this at the class
            # level we would get an error because the class level
            # code would be run when this module is imported, and these composed
            # classes don't exist yet because their module has not finished
            # loading
            return [
                UserProtectComplianceSchema,
                UserUnprotectComplianceSchema,
                UserDeleteComplianceSchema,
                UserUndeleteComplianceSchema,
                UserSuspendComplianceSchema,
                UserUnsuspendComplianceSchema,
                UserWithheldComplianceSchema,
                UserScrubGeoSchema,
                UserProfileModificationComplianceSchema,
            ]


    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'UserComplianceData':
        return super().__new__(
            cls,
            *args,
            _configuration=_configuration,
            **kwargs,
        )

from x_python_sdk.model.user_delete_compliance_schema import UserDeleteComplianceSchema
from x_python_sdk.model.user_profile_modification_compliance_schema import UserProfileModificationComplianceSchema
from x_python_sdk.model.user_protect_compliance_schema import UserProtectComplianceSchema
from x_python_sdk.model.user_scrub_geo_schema import UserScrubGeoSchema
from x_python_sdk.model.user_suspend_compliance_schema import UserSuspendComplianceSchema
from x_python_sdk.model.user_undelete_compliance_schema import UserUndeleteComplianceSchema
from x_python_sdk.model.user_unprotect_compliance_schema import UserUnprotectComplianceSchema
from x_python_sdk.model.user_unsuspend_compliance_schema import UserUnsuspendComplianceSchema
from x_python_sdk.model.user_withheld_compliance_schema import UserWithheldComplianceSchema
