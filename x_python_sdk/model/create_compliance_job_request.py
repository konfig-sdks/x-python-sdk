# coding: utf-8

"""
    Twitter API v2

    Twitter API v2 available endpoints

    The version of the OpenAPI document: 2.62
    Created by: https://developer.twitter.com/
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from x_python_sdk import schemas  # noqa: F401


class CreateComplianceJobRequest(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    A request to create a new batch compliance job.
    """


    class MetaOapg:
        required = {
            "type",
        }
        
        class properties:
            
            
            class type(
                schemas.EnumBase,
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    enum_value_to_name = {
                        "tweets": "TWEETS",
                        "users": "USERS",
                    }
                
                @schemas.classproperty
                def TWEETS(cls):
                    return cls("tweets")
                
                @schemas.classproperty
                def USERS(cls):
                    return cls("users")
        
            @staticmethod
            def name() -> typing.Type['ComplianceJobName']:
                return ComplianceJobName
            resumable = schemas.BoolSchema
            __annotations__ = {
                "type": type,
                "name": name,
                "resumable": resumable,
            }
    
    type: MetaOapg.properties.type
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["type"]) -> MetaOapg.properties.type: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> 'ComplianceJobName': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["resumable"]) -> MetaOapg.properties.resumable: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["type", "name", "resumable", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["type"]) -> MetaOapg.properties.type: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> typing.Union['ComplianceJobName', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["resumable"]) -> typing.Union[MetaOapg.properties.resumable, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["type", "name", "resumable", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        type: typing.Union[MetaOapg.properties.type, str, ],
        name: typing.Union['ComplianceJobName', schemas.Unset] = schemas.unset,
        resumable: typing.Union[MetaOapg.properties.resumable, bool, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'CreateComplianceJobRequest':
        return super().__new__(
            cls,
            *args,
            type=type,
            name=name,
            resumable=resumable,
            _configuration=_configuration,
            **kwargs,
        )

from x_python_sdk.model.compliance_job_name import ComplianceJobName
